var size = '';
var color = '';

// =============================================
// Timer初期処理イベント
// =============================================
window.addEventListener('load', () => {
    // セッションを確認してデフォルトを適用
    if (sessionStorage.getItem('fontSize') === null) {
        sessionStorage.setItem('fontSize', '1');
        checkSessionFontSize(sessionStorage.getItem('fontSize'));
    }
    // セッションを確認してデフォルトを適用
    if (sessionStorage.getItem('color') === null) {
        sessionStorage.setItem('color', '1');
        checkSessionColor(sessionStorage.getItem('color'));
    }
});


// =============================================
// fontSizeセッション確認理
// =============================================
const checkSessionFontSize = function () {
    let fontSize = sessionStorage.getItem('fontSize');

    if (fontSize === '3' && size != 'large') {
        size = 'large';
    } else if (fontSize === '2' && size != 'medium') {
        size = 'medium';
    } else if (fontSize === '1' && size != 'small') {
        size = 'small';
    } else {
        return;
    }

    // 各画面の要素を指定するため各画面の処理を実行
    if (typeof sizeChangeTarget == 'function') {
        sizeChangeTarget();
    }
};

// =============================================
// Font変更処理
// =============================================
function changeFontClass(arrayEle) {
    let fontSize = sessionStorage.getItem('fontSize');
    arrayEle.forEach(function (ele) {

        // フォントサイズの初期化
        ele.classList.remove('font_large_cls');
        ele.classList.remove('font_medium_cls');
        ele.classList.remove('font_small_cls');

        if (fontSize === '3') {
            ele.classList.add('font_large_cls');
        } else if (fontSize === '2') {
            ele.classList.add('font_medium_cls');
        } else {
            ele.classList.add('font_small_cls');
        }
    });
}

// =============================================
// Colorセッション確認理
// =============================================
const checkSessionColor = function () {
    let sessionColor = sessionStorage.getItem('color');

    if (sessionColor === '3' && color != 'yellow') {
        color = 'yellow';
    } else if (sessionColor === '2' && color != 'white') {
        color = 'white';
    } else if (sessionColor === '1' && color != 'black') {
        color = 'black';
    } else {
        return;
    }

    // 各画面のCSSを指定するため各画面の処理を実行
    if (typeof colorChangeUrl == 'function') {
        colorChangeUrl(sessionColor);
    } 
};

// 100ミリ秒ごとにセッションをチェックする
const fontTimer = setInterval(checkSessionFontSize, 100);

const cssTimer = setInterval(checkSessionColor, 100);
